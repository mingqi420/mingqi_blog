<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 心有玲曦遇见你</title>
        <link>http://%E6%98%8E%E5%A5%87.top/posts/</link>
        <description>所有文章 | 心有玲曦遇见你</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>lidefu_420@163.com (李明奇)</managingEditor>
            <webMaster>lidefu_420@163.com (李明奇)</webMaster><lastBuildDate>Mon, 30 May 2022 09:45:37 &#43;0800</lastBuildDate><atom:link href="http://%E6%98%8E%E5%A5%87.top/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Kubernetes</title>
    <link>http://%E6%98%8E%E5%A5%87.top/kubernetes/</link>
    <pubDate>Mon, 30 May 2022 09:45:37 &#43;0800</pubDate>
    <author>李明奇</author>
    <guid>http://%E6%98%8E%E5%A5%87.top/kubernetes/</guid>
    <description><![CDATA[Kubernetes
1. Kubernetes介绍 1.1 应用部署方式演变 在部署应用程序的方式上，主要经历了三个时代：
  传统部署：互联网早期，会直接将应用程序部署在物理机上
 优点：简单，不需要其它技术的参与
缺点：不能为应用程序定义资源使用边界，很难合理地分配计算资源，而且程序之间容易产生影响
   虚拟化部署：可以在一台物理机上运行多个虚拟机，每个虚拟机都是独立的一个环境
 优点：程序环境不会相互产生影响，提供了一定程度的安全性
缺点：增加了操作系统，浪费了部分资源
   容器化部署：与虚拟化类似，但是共享了操作系统
 优点：
可以保证每个容器拥有自己的文件系统、CPU、内存、进程空间等
运行应用程序所需要的资源都被容器包装，并和底层基础架构解耦
容器化的应用程序可以跨云服务商、跨Linux操作系统发行版进行部署
   容器化部署方式给带来很多的便利，但是也会出现一些问题，比如说：
 一个容器故障停机了，怎么样让另外一个容器立刻启动去替补停机的容器 当并发访问量变大的时候，怎么样做到横向扩展容器数量  这些容器管理的问题统称为容器编排问题，为了解决这些容器编排问题，就产生了一些容器编排的软件：
 Swarm：Docker自己的容器编排工具 Mesos：Apache的一个资源统一管控的工具，需要和Marathon结合使用 Kubernetes：Google开源的的容器编排工具  1.2 kubernetes简介 kubernetes，是一个全新的基于容器技术的分布式架构领先方案，是谷歌严格保密十几年的秘密武器&mdash;-Borg系统的一个开源版本，于2014年9月发布第一个版本，2015年7月发布第一个正式版本。
kubernetes的本质是一组服务器集群，它可以在集群的每个节点上运行特定的程序，来对节点中的容器进行管理。目的是实现资源管理的自动化，主要提供了如下的主要功能：
 自我修复：一旦某一个容器崩溃，能够在1秒中左右迅速启动新的容器 弹性伸缩：可以根据需要，自动对集群中正在运行的容器数量进行调整 服务发现：服务可以通过自动发现的形式找到它所依赖的服务 负载均衡：如果一个服务起动了多个容器，能够自动实现请求的负载均衡 版本回退：如果发现新发布的程序版本有问题，可以立即回退到原来的版本 存储编排：可以根据容器自身的需求自动创建存储卷  1.3 kubernetes组件 一个kubernetes集群主要是由控制节点(master)、**工作节点(node)**构成，每个节点上都会安装不同的组件。
master：集群的控制平面，负责集群的决策 ( 管理 )
 ApiServer : 资源操作的唯一入口，接收用户输入的命令，提供认证、授权、API注册和发现等机制
Scheduler : 负责集群资源调度，按照预定的调度策略将Pod调度到相应的node节点上
ControllerManager : 负责维护集群的状态，比如程序部署安排、故障检测、自动扩展、滚动更新等]]></description>
</item>
<item>
    <title>go语言基础知识</title>
    <link>http://%E6%98%8E%E5%A5%87.top/base/</link>
    <pubDate>Wed, 25 May 2022 15:58:08 &#43;0800</pubDate>
    <author>李明奇</author>
    <guid>http://%E6%98%8E%E5%A5%87.top/base/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>go学习笔记</title>
    <link>http://%E6%98%8E%E5%A5%87.top/gotest/</link>
    <pubDate>Tue, 24 May 2022 18:38:36 &#43;0800</pubDate>
    <author>李明奇</author>
    <guid>http://%E6%98%8E%E5%A5%87.top/gotest/</guid>
    <description><![CDATA[fsfsfs]]></description>
</item>
<item>
    <title>go学习笔记</title>
    <link>http://%E6%98%8E%E5%A5%87.top/golearn/</link>
    <pubDate>Tue, 24 May 2022 18:21:04 &#43;0800</pubDate>
    <author>李明奇</author>
    <guid>http://%E6%98%8E%E5%A5%87.top/golearn/</guid>
    <description><![CDATA[adada]]></description>
</item>
<item>
    <title>关于我的信息</title>
    <link>http://%E6%98%8E%E5%A5%87.top/first/</link>
    <pubDate>Thu, 19 May 2022 16:02:14 &#43;0800</pubDate>
    <author>李明奇</author>
    <guid>http://%E6%98%8E%E5%A5%87.top/first/</guid>
    <description><![CDATA[关于我的情况 热爱技术的菜鸟程序员，平时会分享一些读书笔记和工作生活经验。希望大家多多关注
微信公众号 心有玲惜遇奇缘 微信扫描下方二维码关注我：
头条号：心有玲曦遇见你]]></description>
</item>
</channel>
</rss>
